{"version":3,"sources":["components/item/item.component.jsx","components/custom-button/custom-button.component.jsx","components/item-list/item-list.component.jsx","components/form-input/form-input.component.jsx","components/form-select/form-select.component.jsx","pages/add-item/add-item.component.jsx","pages/update-item/update-item.component.jsx","pages/about/about.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Item","department","name","size","corrosionfree","material","weight","id","deleteitem","handleDelete","a","console","log","state","fetch","method","setState","changeDetected","redirect","this","to","pathname","detail","push","className","onError","e","target","onerror","src","onClick","color","React","Component","CustomButton","children","status","otherProps","disabled","ItemList","loading","items","resp","json","data","_id","map","forminput","handleChange","label","errmsg","errcolor","onChange","style","FormSelect","props","optionmaker","optionslist","prop","options","value","handleChangehere","event","prevProps","AddItem","handleSubmit","preventDefault","corrosion","url","bodydata","JSON","stringify","headers","body","response","ok","Error","alert","inputValidator","errname","errnamecolor","errmaterial","errmaterialcolor","errweight","errweightcolor","disablebutton","length","alpha","test","shouldDisableButton","onSubmit","type","UpdateItem","location","aboutPage","App","exact","path","component","addItem","updateItem","AboutPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a68e736b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { RiEdit2Line, RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { AiOutlineColumnWidth } from \"react-icons/ai\";\r\nimport { FaWeightHanging } from \"react-icons/fa\";\r\nimport { FiBox } from \"react-icons/fi\";\r\n\r\n\r\nimport './item.styles.css'\r\n\r\n\r\n// export const Item = (props) => (\r\n//     <div className=\"img-div\">       \r\n\r\n//         <div className=\"span\" onClick={props.OnClickX}>X</div> \r\n//         {/* {<div className=\"span\" onClick={handleDelete(props.id)}>X</div>  }\r\n//         <div className=\"span\">X</div> */}\r\n//         <img className=\"image\" src={props.department}/>\r\n\r\n//         <div>{props.name}</div>\r\n//         <div>{props.size}</div>\r\n//         <div>{props.corrosionfree}</div>\r\n//         <div>{props.material}</div>\r\n//         <div>{props.weight}</div>\r\n//     </div>\r\n// )\r\n\r\n// async function handleDelete(id) {\r\n//     alert('You are deleting this item!')\r\n//     const response = await fetch('http://localhost:5000/api/products/' + {id}, {\r\n//         method: 'DELETE'\r\n//     })\r\n// }\r\n\r\nclass Item extends React.Component {\r\n    constructor({ department, name, size, corrosionfree, material, weight, id }) {\r\n        super({ department, name, size, corrosionfree, material, weight, id });\r\n\r\n        this.state = {\r\n            department: department,\r\n            name: name,\r\n            size: size,\r\n            corrosionfree: corrosionfree,\r\n            material: material,\r\n            weight: weight,\r\n            id: id,\r\n            redirect: null,\r\n            changeDetected: false\r\n\r\n        }\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     this.setState(\r\n    //         {\r\n    //             department:{department},\r\n    //             name:name,\r\n    //             size:size, \r\n    //             corrosionfree:corrosionfree, \r\n    //             material:material, \r\n    //             weight:weight,\r\n    //             id:id\r\n    //         }\r\n\r\n    //     )\r\n    // }\r\n\r\n\r\n\r\n    deleteitem = async handleDelete => {\r\n        // alert('You are deleting this item!')\r\n\r\n        console.log(this.state.department)\r\n\r\n        // https://desolate-fjord-62722.herokuapp.com\r\n        const response = await fetch('http://localhost:5000/api/products/' + this.state.id, {\r\n            // const response = await fetch('https://desolate-fjord-62722.herokuapp.com/api/products/' + this.state.id, {\r\n            method: 'DELETE'\r\n        })\r\n        this.setState({ changeDetected: true });\r\n        console.log(this.state.changeDetected);\r\n        this.setState({ state: this.state });\r\n\r\n    }\r\n\r\n    // updateitem() {\r\n    //     const history = useHistory();\r\n    //     history.push(\"/updateitem\")\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            // return <Redirect to=\"/updateitem\" />\r\n            return <Redirect to={{ pathname: \"/updateitem\", state: { detail: this.state } }} push />\r\n        }\r\n\r\n        if (!this.state.changeDetected) {\r\n\r\n\r\n\r\n            return (\r\n\r\n                <div className=\"img-div\">\r\n\r\n                    {/* <div className=\"span\" onClick={props.OnClickX}>X</div>  */}\r\n                    <div className=\"container\">\r\n                        <img className=\"image\" onError={(e) => { e.target.onerror = null; e.target.src = \"https://via.placeholder.com/200?text=Product+Image\" }} src={this.state.department} />\r\n                        <div className=\"span\" onClick={this.deleteitem}><RiCloseCircleLine size={25} color={'black'} /></div>\r\n                        <div className=\"update\" onClick={() => this.setState({ redirect: true })}><RiEdit2Line size={25} color={'black'} /></div>\r\n                        {/* {<div className=\"span\" onClick={handleDelete(props.id)}>X</div>  }\r\n        <div className=\"span\">X</div> */}\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"productname\"><div className=\"span1\">{this.state.name}</div></div>\r\n                    <div className=\"otherinfo\">\r\n                        <div><AiOutlineColumnWidth />  {this.state.size}</div>\r\n                        <div>{this.state.corrosionfree}</div>\r\n                        <div><FiBox />  {this.state.material}</div>\r\n                        <div><FaWeightHanging />  {this.state.weight} kg</div>\r\n                        <br></br>\r\n                        <br></br>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            )\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\n\r\nimport './custom-button.styles.css'\r\n\r\n\r\nconst CustomButton = ({ children, status, ...otherProps }) => (\r\n  <button disabled={status} className='custom-button1' {...otherProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default CustomButton;","import React from 'react';\r\n\r\nimport  Item  from '../item/item.component';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './item-list.styles.scss'\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nclass ItemList extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            loading: true,\r\n            items: null\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        \r\n        const url = \"http://localhost:5000/api/products\";\r\n        // const url = \"https://desolate-fjord-62722.herokuapp.com/api/products\";\r\n        const resp = await fetch(url);\r\n        const data = await resp.json();\r\n        console.log(data);\r\n        \r\n        this.setState({ items: data, loading: false })\r\n        console.log(this.state.items._id);\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <h1><center>CRUD App for Inventory</center></h1>\r\n                <div className=\"links\"><center><Link to=\"/additem\">Add Item</Link> <Link to=\"/about\">About</Link></center></div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                \r\n                {this.state.loading || !this.state.items ? (\r\n                    <div> loading...</div>\r\n                ) : (\r\n                        <div className=\"item-list\">\r\n                            {\r\n                                this.state.items.map(({ department, name, size, corrosionfree, material, weight, _id}) => {\r\n                                    return <div>\r\n                                        <Item department={department} name={name} size={size} corrosionfree={corrosionfree} material={material} weight={weight} id={_id}  />\r\n                                    </div>\r\n\r\n                                })\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ItemList;\r\n\r\n","import React from 'react';\r\n\r\nimport './form-input.styles.css'\r\n\r\nexport const forminput = ({handleChange, label, errmsg, errcolor, ...otherProps}) => (\r\n\r\n    <div className=\"group\">\r\n        <div className='label'>{label}</div>\r\n        {/* <div><label>{label}</label></div> */}\r\n        <div className=\"inputanderror\">\r\n        <input className='forminput' onChange={handleChange} {...otherProps} />\r\n        <div className='message' style={{color: errcolor}} >{errmsg}</div>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n)\r\n\r\n\r\nexport default forminput;\r\n\r\n","\r\n// import React from 'react';\r\n\r\n// import './form-select.styles.css'\r\n\r\n// class FormSelect extends React.Component {\r\n\r\n//     constructor({handleChange, label, name, options, value, ...otherProps}) {\r\n//         super({handleChange, label, name, options, value, ...otherProps});\r\n//         console.log(options);\r\n\r\n\r\n\r\n//         //     const optionslist = [];\r\n//         //     for (const prop in options) {\r\n//         //         console.log(prop)\r\n//         //         console.log(options[prop])\r\n//         //         optionslist.push(<option value={options[prop]}>{prop}</option>)\r\n//         //     console.log(optionslist);\r\n//         // }\r\n\r\n\r\n//         this.state = {\r\n//             options: options,\r\n//             label: label,\r\n//             handleChange: handleChange,\r\n//             name: name,\r\n//             value: value\r\n//         }\r\n\r\n//     }\r\n\r\n\r\n//     optionmaker() {\r\n//         const optionslist = [];\r\n//         for (const prop in this.state.options) {\r\n//             optionslist.push(<option value={this.state.options[prop]}>{prop}</option>)\r\n//         };\r\n//         return optionslist;\r\n//     }\r\n\r\n\r\n\r\n\r\n//     render() {\r\n//         console.log('Select Value:')\r\n//         console.log(this.state.value);\r\n\r\n//         return (\r\n\r\n//             <div className=\"group\">\r\n//                 {/* <div><label>{this.state.label}</label></div> */}\r\n//                 <div className=\"label\">{this.state.label}</div>\r\n//                 <select defaultValue={this.state.value} className='formselect' name={this.state.name} onChange={this.state.handleChange} {...this.otherProps}>\r\n                \r\n//                     {/* <option value=\"\"></option> */}\r\n//                     {this.optionmaker()}                   \r\n//                 </select>\r\n\r\n//             </div>\r\n\r\n\r\n\r\n//         )\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// export default FormSelect;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nimport './form-select.styles.css'\r\n\r\nclass FormSelect extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('This is from form-select')\r\n        console.log(this.props.value);\r\n        console.log(typeof(this.props.value));\r\n\r\n        //     const optionslist = [];\r\n        //     for (const prop in options) {\r\n        //         console.log(prop)\r\n        //         console.log(options[prop])\r\n        //         optionslist.push(<option value={options[prop]}>{prop}</option>)\r\n        //     console.log(optionslist);\r\n        // }\r\n\r\n\r\n        this.state = {\r\n            options: this.props.options,\r\n            label: this.props.label,\r\n            // handleChange: this.props.handleChange,\r\n            name: this.props.name,\r\n            value: this.props.value\r\n        }\r\n\r\n    }\r\n\r\n\r\n    optionmaker=() => {\r\n        const optionslist = [];\r\n        for (const prop in this.state.options) {\r\n            optionslist.push(<option value={this.state.options[prop]}>{prop}</option>)\r\n        };\r\n        return optionslist;\r\n    }\r\n\r\n    handleChangehere = event=>{\r\n        // this.setState({value: event.target.value});\r\n        this.props.handleChange(event);\r\n    }\r\n\r\n    // this is needed to compare previous props with the updated ones. re-rendering may not happen without using componentDidUpdate\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.value !== prevProps.value){\r\n            console.log('componenet did mount!')\r\n            this.setState({value:this.props.value})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('From inside form-select render.')\r\n        console.log(this.state.value)\r\n        console.log('From props:')\r\n        console.log(this.state.value)\r\n\r\n        return (\r\n\r\n            <div className=\"group\">\r\n                {/* <div><label>{this.state.label}</label></div> */}\r\n                <div className=\"label\">{this.state.label}</div>\r\n                <select value={this.state.value} className='formselect' name={this.state.name} onChange={this.handleChangehere} {...this.otherProps}>\r\n                               \r\n                \r\n                {/* <select value={this.state.value} className='formselect' name={this.state.name} onChange={this.handleChangehere} {...this.otherProps}> */}\r\n                \r\n                    {/* <option value=\"\"></option> */}\r\n                    {this.optionmaker()}                   \r\n                </select>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default FormSelect;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelect from '../../components/form-select/form-select.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\n\r\nclass AddItem extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n\r\n\r\n        this.state = {\r\n            name: '',\r\n            material: '',\r\n            weight: '',\r\n            corrosion: 'True', //Change this if you ever change options in FormSelect subcomponent.\r\n            size: 'Small', //Change this if you ever change options in FormSelect subcomponent.\r\n            url: '',\r\n            redirect: false,\r\n            errname: '',\r\n            errnamecolor: 'red',\r\n            errmaterial: '',\r\n            errmaterialcolor: 'red',\r\n            errweight: '',\r\n            errweightcolor: 'red',\r\n            disablebutton: false\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        // this.setState({ email: '', password: '' });\r\n        console.log('The entered values are:')\r\n        console.log(this.state.name);\r\n        console.log(this.state.material);\r\n        console.log(this.state.weight);\r\n        console.log(this.state.corrosion);\r\n        console.log(this.state.size);\r\n        console.log(this.state.url);\r\n\r\n        let bodydata = {\r\n            name: this.state.name,\r\n            material: this.state.material,\r\n            weight: this.state.weight,\r\n            corrosionfree: (this.state.corrosion == 'True'),\r\n            size: this.state.size,\r\n            department: this.state.url\r\n\r\n        }\r\n\r\n        console.log(JSON.stringify(bodydata))\r\n\r\n        const response = await fetch('http://localhost:5000/api/products', {\r\n        // const response = await fetch('https://desolate-fjord-62722.herokuapp.com/api/products', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            // body: JSON.stringify(bodydata)\r\n            body: JSON.stringify(bodydata)\r\n\r\n        })\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        else {\r\n            alert('Item has been added!')\r\n            this.setState({ redirect: true });\r\n        }\r\n\r\n\r\n        console.log(response)\r\n\r\n    };\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        console.log(name + \" \" + value);\r\n\r\n        // if (name !== 'corrosion' && name !== 'size'){\r\n        //     console.log('name is not corrosion or size')\r\n        //     this.setState({ [name]: value }, this.inputValidator);\r\n        // }\r\n\r\n        // else{\r\n        //     this.setState({ [name]: value });\r\n        // }\r\n        this.setState({ [name]: value }, this.inputValidator);\r\n\r\n\r\n\r\n        console.log('After state change:');\r\n        console.log(this.state.corrosion);\r\n        console.log(this.state.size);\r\n\r\n\r\n    };\r\n\r\n    async inputValidator() {\r\n        if (this.state.name.length < 4 | this.state.name.length > 20) {\r\n            this.setState({ errname: 'Name should be between 4 and 20 characters long.' })\r\n            await this.setState({ errnamecolor: 'red' })\r\n            // this.setState({disablebutton: true})\r\n        }\r\n        else {\r\n            this.setState({ errname: 'OK' })\r\n            await this.setState({ errnamecolor: 'green' })\r\n            // this.setState({disablebutton: false})\r\n        }\r\n\r\n        if (this.state.material.length < 4 | this.state.material.length > 20) {\r\n            this.setState({ errmaterial: 'Material should be between 4 and 20 characters long.' })\r\n            await this.setState({ errmaterialcolor: 'red' })\r\n            // this.setState({disablebutton: true})\r\n        }\r\n        else {\r\n            this.setState({ errmaterial: 'OK' })\r\n            await this.setState({ errmaterialcolor: 'green' })\r\n            // this.setState({disablebutton: false})\r\n        }\r\n\r\n        let specialchar = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,<>\\/?]+/;\r\n        let alpha = /[a-zA-Z]/;\r\n\r\n        if (specialchar.test(this.state.weight) | alpha.test(this.state.weight)) {\r\n            this.setState({ errweight: 'Special characters and alphabets are not allowed.' })\r\n            await this.setState({ errweightcolor: 'red' })\r\n            // this.setState({disablebutton: true})          \r\n        }\r\n        else if (this.state.weight.length < 1 | this.state.weight.length > 10) {\r\n            this.setState({ errweight: 'Weight should not be empty or longer than 10 characters.' })\r\n            await this.setState({ errweightcolor: 'red' })\r\n            // this.setState({disablebutton: true})\r\n        }\r\n        else {\r\n            this.setState({ errweight: 'OK' })\r\n            await this.setState({ errweightcolor: 'green' })\r\n            // this.setState({disablebutton: false})\r\n        }\r\n\r\n        // if (this.state.errnamecolor === 'red' | this.state.errmaterialcolor === 'red' | this.state.errweightcolor === 'red') {\r\n        //     this.setState({ disablebutton: true });\r\n        // }\r\n        this.shouldDisableButton();\r\n    }\r\n\r\n    shouldDisableButton() {\r\n        console.log('Printing colors');\r\n        console.log(this.state.errnamecolor);\r\n        console.log(this.state.errmaterialcolor);\r\n        console.log(this.state.errweightcolor);\r\n        if (this.state.errnamecolor == 'red' || this.state.errmaterialcolor == 'red' || this.state.errweightcolor == 'red') {\r\n            console.log('firing color')\r\n            this.setState({ disablebutton: true });\r\n        }\r\n        else {\r\n            this.setState({ disablebutton: false });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n\r\n            return <Redirect to={{ pathname: \"/\" }} />\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>Add Items</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {/* <FormInput name='name' label='Product Name' handleChange={this.handleChange}/>\r\n            <FormInput name='material' label='Material' handleChange={this.handleChange}/>\r\n            <FormInput name='weight' label='Weight' handleChange={this.handleChange}/>\r\n            <FormSelect name='corrosion' label='Corrosion Free' options={{ 'True': 'True', 'False': 'False' }} handleChange={this.handleChange} />\r\n            <FormSelect name='size' label='Size' options={{ 'Small': 'Small', 'Medium': 'Medium', 'Large': 'Large' }} handleChange={this.handleChange}/>\r\n            <FormInput name='url' label='Picture URL' handleChange={this.handleChange}/>\r\n            <CustomButton type='submit'> Submit</CustomButton> */}\r\n\r\n                    <FormInput value={this.state.name} name='name' label='Product Name' handleChange={this.handleChange} errmsg={this.state.errname} errcolor={this.state.errnamecolor} />\r\n                    <FormInput value={this.state.material} name='material' label='Material' handleChange={this.handleChange} errmsg={this.state.errmaterial} errcolor={this.state.errmaterialcolor} />\r\n                    <FormInput value={this.state.weight} name='weight' label='Weight' handleChange={this.handleChange} errmsg={this.state.errweight} errcolor={this.state.errweightcolor} />\r\n                    <FormSelect name='corrosion' label='Corrosion Free' options={{ 'True': 'True', 'False': 'False' }} handleChange={this.handleChange} />\r\n                    <FormSelect name='size' label='Size' options={{ 'Small': 'Small', 'Medium': 'Medium', 'Large': 'Large' }} handleChange={this.handleChange} />\r\n                    <FormInput value={this.state.url} name='url' label='Picture URL' handleChange={this.handleChange} />\r\n                    <CustomButton status={this.state.disablebutton} type='submit'>Submit</CustomButton>\r\n\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AddItem;\r\n\r\n\r\n","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelect from '../../components/form-select/form-select.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\n\r\nimport './update-item.styles.css';\r\n\r\nclass UpdateItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.location.state.detail.name,\r\n            material: this.props.location.state.detail.material,\r\n            weight: this.props.location.state.detail.weight,\r\n            corrosion: (this.props.location.state.detail.corrosionfree == true) ? 'True' : 'False',\r\n            size: this.props.location.state.detail.size,\r\n            url: this.props.location.state.detail.department,\r\n            id: this.props.location.state.detail.id,\r\n            redirect: false,\r\n            errname: '',\r\n            errnamecolor: 'red',\r\n            errmaterial: '',\r\n            errmaterialcolor: 'red',\r\n            errweight: '',\r\n            errweightcolor: 'red',\r\n            disablebutton: false\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        console.log('The entered values are:')\r\n        console.log(this.state.name);\r\n        console.log(this.state.material);\r\n        console.log(this.state.weight);\r\n        console.log(this.state.corrosion);\r\n        console.log(this.state.size);\r\n        console.log(this.state.url);\r\n\r\n        let bodydata = {\r\n            name: this.state.name,\r\n            material: this.state.material,\r\n            weight: this.state.weight,\r\n            corrosionfree: (this.state.corrosion == 'True'),\r\n            size: this.state.size,\r\n            department: this.state.url,\r\n            id: this.state.id,\r\n\r\n\r\n        }\r\n\r\n        console.log(JSON.stringify(bodydata))\r\n\r\n        const response = await fetch('http://localhost:5000/api/products', {\r\n        // const response = await fetch('https://desolate-fjord-62722.herokuapp.com/api/products', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n\r\n            body: JSON.stringify(bodydata)\r\n\r\n        })\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        else {\r\n            console.log('update successful.')\r\n            alert('Item has been updated!')\r\n            this.setState({ redirect: true })\r\n        }\r\n\r\n        console.log(response)\r\n\r\n    };\r\n\r\n    handleChange = async event => {\r\n        console.log('Print event:');\r\n        console.log(event);\r\n        const { value, name } = event.target;\r\n\r\n        console.log(name + \" \" + value);\r\n\r\n        // if (name !== 'corrosion' && name !== 'size') {\r\n        //     console.log('name is not corrosion or size')\r\n        //     // await this.setState({ [name]: value }, this.inputValidator);\r\n        //     this.setState({ [name]: value });\r\n        // }\r\n        // else {\r\n        //     // await this.setState({ [name]: value });\r\n        //     this.setState({ [name]: value });\r\n        // }\r\n        // console.log('After state change:');\r\n        // console.log(this.state.corrosion);\r\n        // console.log(this.state.size);\r\n        await this.setState({ [name]: value }, this.inputValidator);\r\n\r\n\r\n    };\r\n    // async inputValidator {\r\n    inputValidator = async () => {\r\n        if (this.state.name.length < 4 | this.state.name.length > 20) {\r\n            this.setState({ errname: 'Name should be between 4 and 20 characters long.' })\r\n            await this.setState({ errnamecolor: 'red' })\r\n            // this.setState({disablebutton: true})\r\n        }\r\n        else {\r\n            this.setState({ errname: 'OK' })\r\n            await this.setState({ errnamecolor: 'green' })\r\n            // this.setState({disablebutton: false})\r\n        }\r\n\r\n        if (this.state.material.length < 4 | this.state.material.length > 20) {\r\n            this.setState({ errmaterial: 'Material should be between 4 and 20 characters long.' })\r\n            await this.setState({ errmaterialcolor: 'red' })\r\n            // this.setState({disablebutton: true})\r\n        }\r\n        else {\r\n            this.setState({ errmaterial: 'OK' })\r\n            await this.setState({ errmaterialcolor: 'green' })\r\n            // this.setState({disablebutton: false})\r\n        }\r\n\r\n        let specialchar = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,<>\\/?]+/;\r\n        let alpha = /[a-zA-Z]/;\r\n\r\n        if (specialchar.test(this.state.weight) | alpha.test(this.state.weight)) {\r\n            this.setState({ errweight: 'Special characters and alphabets are not allowed.' })\r\n            await this.setState({ errweightcolor: 'red' })\r\n            // this.setState({disablebutton: true})          \r\n        }\r\n        else if (this.state.weight.length < 1 | this.state.weight.length > 10) {\r\n            this.setState({ errweight: 'Weight should not be empty or longer than 10 characters.' })\r\n            await this.setState({ errweightcolor: 'red' })\r\n            // this.setState({disablebutton: true})\r\n        }\r\n        else {\r\n            this.setState({ errweight: 'OK' })\r\n            await this.setState({ errweightcolor: 'green' })\r\n            // this.setState({disablebutton: false})\r\n        }\r\n\r\n        // if (this.state.errnamecolor === 'red' | this.state.errmaterialcolor === 'red' | this.state.errweightcolor === 'red') {\r\n        //     this.setState({ disablebutton: true });\r\n        // }\r\n        this.shouldDisableButton();\r\n    }\r\n    // shouldDisableButton(){\r\n    shouldDisableButton = () => {\r\n        console.log('Printing colors');\r\n        console.log(this.state.errnamecolor);\r\n        console.log(this.state.errmaterialcolor);\r\n        console.log(this.state.errweightcolor);\r\n        if (this.state.errnamecolor == 'red' || this.state.errmaterialcolor == 'red' || this.state.errweightcolor == 'red') {\r\n            console.log('firing color')\r\n            this.setState({ disablebutton: true });\r\n        }\r\n        else {\r\n            this.setState({ disablebutton: false });\r\n        }\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     this.setState({corrosion: this.props.location.state.detail.corrosionfree});\r\n    //     this.setState({size: this.props.location.state.detail.size});\r\n    // }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        console.log('rendering')\r\n        // console.log(this.props.location.state.detail)\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{ pathname: \"/\" }} />\r\n        }\r\n        // console.log(this.state);\r\n        // console.log(this.state.disablebutton);\r\n\r\n        console.log('The state of size inside render is:');\r\n        console.log(this.state.size);\r\n\r\n        return (\r\n            <div>\r\n                <h2>Update Items</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <br></br>\r\n                    <span className=\"ID\">ID: {this.state.id}</span>\r\n                    <p></p>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <FormInput value={this.state.name} name='name' label='Product Name' handleChange={this.handleChange} errmsg={this.state.errname} errcolor={this.state.errnamecolor} />\r\n                    <FormInput value={this.state.material} name='material' label='Material' handleChange={this.handleChange} errmsg={this.state.errmaterial} errcolor={this.state.errmaterialcolor} />\r\n                    <FormInput value={this.state.weight} name='weight' label='Weight' handleChange={this.handleChange} errmsg={this.state.errweight} errcolor={this.state.errweightcolor} />\r\n                    <FormSelect value={this.state.corrosion} name='corrosion' label='Corrosion Free' options={{ 'True': 'True', 'False': 'False' }} handleChange={this.handleChange} />\r\n                    <FormSelect value={this.state.size} name='size' label='Size' options={{ 'Small': 'Small', 'Medium': 'Medium', 'Large': 'Large' }} handleChange={this.handleChange} />\r\n                    <FormInput value={this.state.url} name='url' label='Picture URL' handleChange={this.handleChange} />\r\n                    <CustomButton status={this.state.disablebutton} type='submit'>Push Update</CustomButton>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateItem;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './about.styles.css';\r\n\r\nconst aboutPage = props => (\r\n    <div className=\"para\">\r\n        <h1>About</h1>\r\n\r\n\r\n        <p>Welcome to the website. This website implements a basic CRUD app using MERN stack.</p>\r\n        <p>To <b>create</b> an item, please click on the 'Create Item' link above. The items shown on this page are the\r\n                items in the database and therefore represent the <b>R</b> part of the C<b>R</b>UD. The items can be <b>updated</b> by clicking the update icon\r\n                on each item's image. Click on the delete icon on the item image to <b>delete</b> the item.</p>\r\n\r\n    </div>\r\n)\r\n\r\nexport default aboutPage;\r\n","\nimport './App.css';\nimport ItemList from './components/item-list/item-list.component';\nimport addItem from './pages/add-item/add-item.component';\nimport { Switch, Route,  } from 'react-router-dom';\nimport updateItem from './pages/update-item/update-item.component';\nimport AboutPage from './pages/about/about.component'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n\n      <Switch>\n        <Route exact path='/additem' component={addItem} />\n        <Route exact path='/' component={ItemList} />\n        <Route exact path='/updateitem' component={updateItem} />\n        <Route exact path='/about' component={AboutPage} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter basename =\"/React-Inventory-frontend\">\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}